using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using Nemerle.Compiler.Parsetree;

namespace PetriNetLib
{
  /// <summary>
  /// Description of OutModel.
  /// </summary>
  [Record]
  class OutModel
  {
    public places      : array[Place];
    public transitions : array[Transition];
    public arcs        : array[Arc];
    public vars        : Hashtable[string, ColourSet] = Hashtable();
    public colour_sets : Hashtable[string, ColourSet] = Hashtable();
    public ml_decls    : list[PExpr];
    
    public IsTimed : bool
    {
      [Memoize]
      get
      {
        places.Exists(_.IsTimed)
      }
    }
    
    public GetIndex(name : string) : option[string * string]
    {
      def index = colour_sets.Fold([], (x, a) => if (x.Value is ColourSet(n, Colour.Index(id = i))) (n, i) :: a else a);
      index.Find((_, n) => name == n)
    }
  }
  
}
