using System;
using System.IO;
using Nemerle;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using System.Console;
using System.Diagnostics;

namespace CommonLib.Macros
{
  
  
  
  //[MacroUsage(MacroPhase.WithTypedMembers,MacroTargets.Class,Inherited=true)]  
  //macro SerializeGen(ty : TypeBuilder)
  //{  
  //  Message.Hint($"Creating serialization for class $(ty.FullName)");    
    
    
  //  Helper.CreateSerialize(ty);
  
  //  _ = ty;
  ////<[ () ]>
  //}

  //public module Helper
  //{
 
  //  public CreateSerialize(ty : TypeBuilder) : void
  //  {      
      
  //    def create(prop)
  //    {   
  //    def name=prop.Name;      
  //    def typ=prop.GetMemType().GetSystemType();      
  //    def code=Type.GetTypeCode(typ);
  ////def info=prop.GetMemType().TypeInfo;
  ////def mems=info.GetMembers();
  //      //def method= <[decl: public Serialize(writer : BinaryWriter) : void {} ]>
  //      //ty.Define();
  //   // Debugger.Break();
  //    match (code)
  //    {
  //      |TypeCode.Object => <[ $(name : usesite).Serialize(writer); ]>;
  //      | _ => 
  //        <[ writer.Write($(name : usesite)); ]>;
  //    }      
  //      //Message.Hint($"Property name: $name");    
  //    }
     
  //    def props=ty.GetProperties();
  //    def conv=props.Map(create(_));
  //    def decl= <[decl: public Serialize(writer : BinaryWriter) : void
  //               {
  //                 ..$conv
  //               }
  //              ]>;
  //    ty.Define(decl);          
  //  }
    
  //  public DefineEvent(_ : TypeBuilder) : void
  //  {
////  def evt=["abc","cda"];
  ////evt.M
  ////Debugger.Break();
////  def expr= <[ decl: public event abc : EventHandler; ]>;
  ////def str=expr.ToString();  
  //  }
  
  //  public DefineProperty(ty : TypeBuilder) : void
  //  {
  //    def evt=["prop1","prop2"];
  ////evt.M
  
  //    foreach (e in evt)
  //    {
  //      def expr= <[ decl: public $(e : usesite) : int 
  //          {
  //          get
  //          {
  //          0;
  //          }
  //          set
  //          {
  //          }
  //          } 
  //          ]>;
  //      ty.Define(expr);
  //    }
  //  }
  
  //}
 
  //[MacroUsage(MacroPhase.BeforeTypedMembers,MacroTargets.Class,Inherited=true)]  
  //macro TestEvent(ty : TypeBuilder)
  //{
  //  Helper.DefineEvent(ty);
  //  Helper.DefineProperty(ty);
  //}
 
}
