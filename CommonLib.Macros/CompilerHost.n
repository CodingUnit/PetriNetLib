using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using Nemerle.Compiler;
using System.IO;

namespace CommonLib.Macros
{
  public class CompilerHost : ManagerClass
  {

    public this()
    {
      def opt = CompilationOptions();
      opt.DoNotLoadMacros = true;
      base(opt);
      Options.LibraryPaths ::= NemerleBinPath;
      InitCompiler();
      LoadExternalLibraries();
      Hierarchy = TypesManager(this)
    }

    NemerleBinPath : string
    {
      get
      {
        def nemerle = Environment.GetEnvironmentVariable("Nemerle");
        if (nemerle == null) 
        {
          def progFiles86 = Environment.GetEnvironmentVariable("ProgramFiles(x86)");
          if (progFiles86 == null) Path.Combine(Environment.GetEnvironmentVariable("ProgramFiles"), "Nemerle"); else Path.Combine(progFiles86, "Nemerle")
        }; else nemerle
      }
    }
  }

  
}
